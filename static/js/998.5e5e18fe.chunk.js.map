{"version":3,"file":"static/js/998.5e5e18fe.chunk.js","mappings":"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","sources":["shared/navbar/logo-type/LogoType.tsx","shared/color-mode-button/ColorModeButton.tsx","shared/navbar/drawer/Drawer.tsx","shared/navbar/Navbar.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Box, Text, useBreakpointValue } from \"@chakra-ui/react\";\n\ninterface Props {\n    text: {\n        mobile: string;\n        desktop: string;\n    };\n}\n\nexport const LogoType: FC<Props> = ({ text }) => {\n    const variant = useBreakpointValue({ base: text.mobile, md: text.desktop });\n\n    return (\n        <Box transition=\"all 0.2s ease-in-out\" _hover={{ cursor: \"pointer\", color: \"primary.600\" }}>\n            <Text fontSize={{ base: \"3xl\", md: \"4xl\" }} lineHeight=\"1\" fontFamily=\"Signature\" mb={{ base: 0, md: -2 }}>\n                {variant}\n            </Text>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { HStack, IconButton, StyleProps, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { MoonIcon, SunIcon } from \"utils/Icons\";\n\nexport const ColorModeButton: FC<StyleProps> = (props) => {\n    const color = useColorModeValue(\"gray.800\", \"white\");\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return (\n        <HStack {...props}>\n            <IconButton\n                aria-label=\"appearance\"\n                bg=\"transparent\"\n                color={color}\n                fontSize=\"lg\"\n                _hover={{ color: \"primary.500\" }}\n                _active={{ bg: \"transparent\" }}\n                icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n                variant=\"ghost\"\n                size=\"xs\"\n                onClick={() => {\n                    toggleColorMode();\n                    window.scrollBy(0, 1);\n                    window.scrollBy(0, -1);\n                }}\n                w=\"32px\"\n                h=\"32px\"\n            />\n        </HStack>\n    );\n};\n","import { FC, useRef } from \"react\";\n\nimport {\n    Box,\n    Button,\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    IconButton,\n    StyleProps,\n    Flex,\n    VStack,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\nimport { AboutPageId } from \"utils/useScroll\";\nimport { MenuIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { onResumeOpen } from \"utils/Functions\";\n\ninterface Props extends StyleProps {\n    onSectionClick: (section: string) => void;\n    currentPage: string;\n}\n\nexport const MenuDrawer: FC<Props> = ({ onSectionClick, currentPage, ...props }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const btnRef = useRef<any>(null);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n\n    return (\n        <Box {...props}>\n            <Button\n                as={IconButton}\n                variant=\"icon\"\n                ref={btnRef}\n                onClick={onOpen}\n                aria-label=\"open drawer\"\n                fontSize=\"lg\"\n                color=\"primary.500\"\n                icon={<MenuIcon />}\n                px=\"0\"\n            />\n            <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose} autoFocus={false}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader px=\"4\">\n                        <Flex justifyContent=\"space-between\">\n                            <ColorModeButton />\n                            <DrawerCloseButton position=\"relative\" top=\"0\" right=\"0\" />\n                        </Flex>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                        <VStack spacing=\"6\" my=\"16\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(AboutPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                About\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color=\"primary.500\"\n                                onClick={onResumeOpen}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"400\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Resume\n                            </Button>\n                        </VStack>\n                        <Flex justifyContent=\"center\" mt=\"16\">\n                            <Socials delay={100} resume={false} />\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Button, Container, Flex, HStack, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { LogoType } from \"shared/navbar/logo-type/LogoType\";\nimport { bgDark, bgLight } from \"theme\";\nimport { onResumeOpen } from \"utils/Functions\";\nimport { AboutPageId, useScroll } from \"utils/useScroll\";\nimport { MenuDrawer } from \"./drawer/Drawer\";\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\n\nexport const Navbar: FC = () => {\n    const bg = useColorModeValue(bgLight, bgDark);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n    const currentPage = useScroll();\n\n    const toSection = (section: string) => {\n        document.getElementById(section)?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    return (\n        <Box bg={bg} position=\"fixed\" top=\"0\" w=\"100%\" left=\"50%\" transform=\"translate(-50%)\" zIndex=\"10\">\n            <Container py=\"4\" px=\"4\" data-aos=\"fade-down\" data-aos-duration=\"500\" data-aos-delay=\"100\">\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                    <LogoType text={configs.common.logoType} />\n                    <Flex alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\n                        <HStack spacing=\"8\" mr=\"6\">\n                            <Button variant=\"link\" onClick={onResumeOpen} data-aos=\"fade\" data-aos-delay=\"400\">\n                                Resume\n                            </Button>\n                        </HStack>\n                        <ColorModeButton />\n                    </Flex>\n\n                    <MenuDrawer\n                        currentPage={currentPage}\n                        onSectionClick={toSection}\n                        display={{ base: \"block\", md: \"none\" }}\n                    />\n                </Flex>\n            </Container>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" mr=\"2\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["LogoType","_ref","text","variant","useBreakpointValue","base","mobile","md","desktop","_jsx","Box","transition","_hover","cursor","color","children","Text","fontSize","lineHeight","fontFamily","mb","ColorModeButton","props","useColorModeValue","colorMode","toggleColorMode","useColorMode","HStack","IconButton","bg","_active","icon","MoonIcon","SunIcon","size","onClick","window","scrollBy","w","h","MenuDrawer","onSectionClick","currentPage","isOpen","onOpen","onClose","useDisclosure","btnRef","useRef","navItemColor","_jsxs","Button","as","ref","MenuIcon","px","Drawer","placement","autoFocus","DrawerOverlay","DrawerContent","DrawerHeader","Flex","justifyContent","DrawerCloseButton","position","top","right","DrawerBody","VStack","spacing","my","textDecoration","AboutPageId","textDecorationThickness","textDecorationColor","setTimeout","fontWeight","onResumeOpen","mt","Socials","delay","resume","Navbar","bgLight","bgDark","useScroll","left","transform","zIndex","Container","py","alignItems","configs","common","logoType","display","mr","section","_document$getElementB","document","getElementById","scrollIntoView","behavior","LinksToIconMapper","linkedin","LinkedInIcon","github","GitHubIcon","facebook","FacebookIcon","instagram","InstagramIcon","youtube","YoutubeIcon","mail","MailIcon","exclude","borderRadius","socials","map","social","idx","includes","type","Tooltip","label","textTransform","p","open","link","onMailTo","email"],"sourceRoot":""}